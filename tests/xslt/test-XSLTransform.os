Перем юТест;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_СоздатьКомпоненту");
	ВсеТесты.Добавить("ТестДолжен_УстановитьСтилиИзСтроки");
	ВсеТесты.Добавить("ТестДолжен_УстановитьСтилиИзФайла");
	ВсеТесты.Добавить("ТестДолжен_УстановитьСтилиИзУзла");
	ВсеТесты.Добавить("ТестДолжен_ДобавитьПараметр");
	ВсеТесты.Добавить("ТестДолжен_УдалитьПараметр");
	ВсеТесты.Добавить("ТестДолжен_ВыполнитьПреобразованиеИзСтроки");
	ВсеТесты.Добавить("ТестДолжен_ВыполнитьПреобразованиеИзФайла");
	ВсеТесты.Добавить("ТестДолжен_ВыполнитьПреобразованиеИзУзла");
	ВсеТесты.Добавить("ТестДолжен_ВыполнитьПреобразованиеСПараметрами");

	Возврат ВсеТесты;

КонецФункции // ПолучитьСписокТестов()

Процедура ТестДолжен_СоздатьКомпоненту() Экспорт

	Преобразование = Новый ПреобразованиеXSL();
	юТест.ПроверитьРавенство(ТипЗнч(Преобразование),
	                         Тип("ПреобразованиеXSL"),
	                         "Не удалось создать объект ПреобразованиеXSL"); 

КонецПроцедуры // ТестДолжен_СоздатьКомпоненту()

Процедура ТестДолжен_УстановитьСтилиИзСтроки() Экспорт

	Преобразование = Новый ПреобразованиеXSL();
	юТест.ПроверитьРавенство(ТипЗнч(Преобразование),
	                         Тип("ПреобразованиеXSL"),
	                         "Не удалось создать объект ПреобразованиеXSL"); 

	Шаблон = ПолучитьДанныеИзФайла("xslt/xslt-mock_template.xslt");

	Попытка
		Преобразование.ЗагрузитьТаблицуСтилейXSLИзСтроки(Шаблон);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось добавить загрузить таблицу стилей из строки %1""%2"":%1%3",
		                            Символы.ПС,
		                            Шаблон,
		                            ТекстОшибки);
	КонецПопытки;

КонецПроцедуры // ТестДолжен_УстановитьСтилиИзСтроки()

Процедура ТестДолжен_УстановитьСтилиИзФайла() Экспорт

	Преобразование = Новый ПреобразованиеXSL();
	юТест.ПроверитьРавенство(ТипЗнч(Преобразование),
	                         Тип("ПреобразованиеXSL"),
	                         "Не удалось создать объект ПреобразованиеXSL"); 

	ПутьКФайлу = "xslt/xslt-mock_template.xslt";

	Попытка
		Преобразование.ЗагрузитьТаблицуСтилейXSLИзФайла(ПутьКФайлу);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось добавить загрузить таблицу стилей из файла ""%1"":%2%3",
		                            ПутьКФайлу,
		                            Символы.ПС,
		                            ТекстОшибки);
	КонецПопытки;

КонецПроцедуры // ТестДолжен_УстановитьСтилиИзФайла()

Процедура ТестДолжен_ДобавитьПараметр() Экспорт

	Преобразование = Новый ПреобразованиеXSL();
	юТест.ПроверитьРавенство(ТипЗнч(Преобразование),
	                         Тип("ПреобразованиеXSL"),
	                         "Не удалось создать объект ПреобразованиеXSL"); 

	ИмяПараметра = "testParam";
	ЗначениеПараметра = "items";
	Попытка
		Преобразование.ДобавитьПараметр(ИмяПараметра, ЗначениеПараметра);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось добавить параметр ""%1"" со значением ""%2"":%3%4",
		                            ИмяПараметра,
		                            ЗначениеПараметра,
		                            Символы.ПС,
		                            ТекстОшибки);
	КонецПопытки;

КонецПроцедуры // ТестДолжен_ДобавитьПараметр()

Процедура ТестДолжен_УдалитьПараметр() Экспорт

	Преобразование = Новый ПреобразованиеXSL();
	юТест.ПроверитьРавенство(ТипЗнч(Преобразование),
	                         Тип("ПреобразованиеXSL"),
	                         "Не удалось создать объект ПреобразованиеXSL"); 

	ИмяПараметра = "testParam";
	ЗначениеПараметра = "items";

	Попытка
		Преобразование.ДобавитьПараметр(ИмяПараметра, ЗначениеПараметра);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось добавить параметр ""%1"" со значением ""%2"":%3%4",
		                            ИмяПараметра,
		                            ЗначениеПараметра,
		                            Символы.ПС,
		                            ТекстОшибки);
	КонецПопытки;

	Попытка
		Преобразование.УдалитьПараметр(ИмяПараметра);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось удалить параметр ""%1"":%2%3",
		                            ИмяПараметра,
		                            Символы.ПС,
		                            ТекстОшибки);
	КонецПопытки;

КонецПроцедуры // ТестДолжен_УдалитьПараметр()

Процедура ТестДолжен_ВыполнитьПреобразованиеИзСтроки() Экспорт

	Преобразование = Новый ПреобразованиеXSL();
	юТест.ПроверитьРавенство(ТипЗнч(Преобразование),
	                         Тип("ПреобразованиеXSL"),
	                         "Не удалось создать объект ПреобразованиеXSL"); 

	Шаблон = ПолучитьДанныеИзФайла("xslt/xslt-mock_template.xslt");
	ИсходныеДанные = ПолучитьДанныеИзФайла("xslt/xslt-mock_data.xml");
	ТестоваяСтрока = "<new>item3</new>";

	Попытка
		Преобразование.ЗагрузитьТаблицуСтилейXSLИзСтроки(Шаблон);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось добавить загрузить таблицу стилей из строки %1""%2"":%1%3",
		                            Символы.ПС,
		                            Шаблон,
		                            ТекстОшибки);
	КонецПопытки;

	Попытка
		Результат = Преобразование.ПреобразоватьИзСтроки(ИсходныеДанные);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось выполнить преобразование строки %1""%2""%1 по шаблону %1""%3"":%1%4",
		                            Символы.ПС,
		                            ИсходныеДанные,
		                            Шаблон,
		                            ТекстОшибки);
	КонецПопытки;

	ТекстОшибки = СтрШаблон("Не удалось выполнить преобразование строки %1""%2""%1 по шаблону %1""%3""",
	                        Символы.ПС,
	                        ИсходныеДанные,
	                        Шаблон);
	юТест.ПроверитьРавенство(СокрЛП(Результат),	ТестоваяСтрока, ТекстОшибки); 

КонецПроцедуры // ТестДолжен_ВыполнитьПреобразованиеИзСтроки()

Процедура ТестДолжен_ВыполнитьПреобразованиеИзФайла() Экспорт

	Преобразование = Новый ПреобразованиеXSL();
	юТест.ПроверитьРавенство(ТипЗнч(Преобразование),
	                         Тип("ПреобразованиеXSL"),
	                         "Не удалось создать объект ПреобразованиеXSL"); 

	Шаблон = ПолучитьДанныеИзФайла("xslt/xslt-mock_template.xslt");
	ПутьКФайлу = "xslt/xslt-mock_data.xml";
	ТестоваяСтрока = "<new>item3</new>";

	Попытка
		Преобразование.ЗагрузитьТаблицуСтилейXSLИзСтроки(Шаблон);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось добавить загрузить таблицу стилей из строки %1""%2"":%1%3",
		                            Символы.ПС,
		                            Шаблон,
		                            ТекстОшибки);
	КонецПопытки;

	Попытка
		Результат = Преобразование.ПреобразоватьИзФайла(ПутьКФайлу);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось выполнить преобразование файла ""%1"" по шаблону %2""%3"":%2%4",
		                            ПутьКФайлу,
		                            Символы.ПС,
		                            Шаблон,
		                            ТекстОшибки);
	КонецПопытки;

	ТекстОшибки = СтрШаблон("Не удалось выполнить преобразование файла ""%1"" по шаблону %2""%3""",
	                        ПутьКФайлу,
	                        Символы.ПС,
	                        Шаблон);
	юТест.ПроверитьРавенство(СокрЛП(Результат),	ТестоваяСтрока, ТекстОшибки); 

КонецПроцедуры // ТестДолжен_ВыполнитьПреобразованиеИзФайла()

Процедура ТестДолжен_ВыполнитьПреобразованиеСПараметрами() Экспорт

	Преобразование = Новый ПреобразованиеXSL();
	юТест.ПроверитьРавенство(ТипЗнч(Преобразование),
	                         Тип("ПреобразованиеXSL"),
	                         "Не удалось создать объект ПреобразованиеXSL"); 

	Шаблон = ПолучитьДанныеИзФайла("xslt/xslt-mock_template_w_param.xslt");
	ИсходныеДанные = ПолучитьДанныеИзФайла("xslt/xslt-mock_data.xml");
	ТестоваяСтрока = "<new>items\item3</new>";
	ИмяПараметра = "testParam";
	ЗначениеПараметра = "items";

	Попытка
		Преобразование.ЗагрузитьТаблицуСтилейXSLИзСтроки(Шаблон);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось добавить загрузить таблицу стилей из строки %1""%2"":%1%3",
		                            Символы.ПС,
		                            Шаблон,
		                            ТекстОшибки);
	КонецПопытки;

	Попытка
		Преобразование.ДобавитьПараметр(ИмяПараметра, ЗначениеПараметра);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось добавить параметр ""%1"" со значением ""%2"":%3%4",
		                            ИмяПараметра,
		                            ЗначениеПараметра,
		                            Символы.ПС,
		                            ТекстОшибки);
	КонецПопытки;

	Попытка
		Результат = Преобразование.ПреобразоватьИзСтроки(ИсходныеДанные);
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СтрШаблон("Не удалось выполнить преобразование строки %1""%2""%1 по шаблону %1""%3"":%1%4",
		                            Символы.ПС,
		                            ИсходныеДанные,
		                            Шаблон,
		                            ТекстОшибки);
	КонецПопытки;

	ТекстОшибки = СтрШаблон("Не удалось выполнить преобразование строки %1""%2""%1 по шаблону %1""%3""",
	                        Символы.ПС,
	                        ИсходныеДанные,
	                        Шаблон);
	юТест.ПроверитьРавенство(СокрЛП(Результат),	ТестоваяСтрока, ТекстОшибки); 

КонецПроцедуры // ТестДолжен_ВыполнитьПреобразованиеСПараметрами()

Функция ПолучитьДанныеИзФайла(ПутьКФайлу)

	Текст = Новый ТекстовыйДокумент();
	Текст.Прочитать(ПутьКФайлу, КодировкаТекста.UTF8);
	
	Возврат Текст.ПолучитьТекст();
	
КонецФункции // ПолучитьДанныеИзФайла()
